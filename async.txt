branch
	// Forks from main thread, does not interrupt flow of parser and does not return
	//  - If parser flow is broken (error, redirect, etc.), these will not be terminated,
	//    but will also not delay the client response/connection close
	app : <app>
fork:return_replace
	root : <app>
	branches : {"tag" : <app>}
	// Forks each branch from the root. When root and all branches have terminated,
	// replace each "tag" in the output of the root with the output for the corresponding app
fork:return_stack
	branches : [<app>]
	// Forks each branch. When all branches terminate, concat their output in the original
	// order and output
fork:return_discreet
	app : <app>
	tag : ""
	// Combines fork:return_replace with branch:
	//  - Parser flow not interrupted
	//  - Each branch is forked from the root
	//  - Upon termination of the flow and the branches, the tag will be replaced in the
	//    final output
	//  - If parser flow is completed, output will halt until these terminate
	//  - If parser flow is broken (error, redirect, etc.), these will not be terminated,
	//    but will also not delay the client response/connection close
	// The order in which these are processed is FIFO